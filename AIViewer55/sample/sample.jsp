<%
/************************************************************************************
Generated by AIDesigner 5.5.0.8
************************************************************************************
보고서 제목 : 보고서 (2013/1/3 18:44:55)
작성일 : 2013년1월3일 18시44분55초
작성자 :
************************************************************************************/
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.lang.*,java.text.*,java.util.*,java.net.URL" %>
<%@ page contentType="text/html; charset=utf-8" %>
<%@ page import="com.activeintra.manager.*" %>
<%@ page import="com.activeintra.url.*" %>
<%@ page import="org.apache.log4j.Logger" %>
<%@ page import="org.apache.log4j.PropertyConfigurator" %>
<%@ page import="com.activeintra.util.uds.*" %>

<%
Object[] userObj = null;

String reportMode=request.getParameter("reportMode");
String reportParams=request.getParameter("reportParams");
if(reportMode!=null){
	if(reportMode.equals("PDF")){
		if(reportParams == null || reportParams.toLowerCase().indexOf("pdfserversave:true") == -1){
			out.clear();
			out=pageContext.pushBody();
		}
	}
	else if(reportMode.equals("EXCEL") || reportMode.equals("AR5")){
		out.clear();
		out=pageContext.pushBody();
	}
}

ReportHandler handler = new ReportHandler(pageContext,request,response,userObj);
handler.service(out);
handler = null;
%>

<%!
private Logger logger = Logger.getLogger("sample.jsp");
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private int CELL_OBJECT = 0;
	private int DRAW_OBJECT = 1;
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private PageContext pageContext;
	private JspWriter out;

	private AIScriptManager manager;
	private String reportMode="AIScript";
	private String pdfFilename="";

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_R3;
	String sheet10_A5;
	String sheet10_B5;
	String sheet10_C5;
	String sheet10_D5;
	String sheet10_Q5;
	String sheet10_R5;
	String sheet10_S5;
	String sheet10_A6;
	String sheet10_B6;
	String sheet10_C6;
	String sheet10_P6;
	String sheet10_Q6;
	String sheet10_R6;
	String sheet10_S6;
	String sheet10_D7;
	String sheet10_A9;
	String sheet10_C9;
	String sheet10_P9;
	String sheet10_Q9;
	String sheet10_R9;
	String sheet10_S9;
	String sheet10_D10;
	String sheet10_A12;
	String sheet10_C12;
	String sheet10_P12;
	String sheet10_Q12;
	String sheet10_R12;
	String sheet10_S12;
	String sheet10_D13;
	String sheet10_A15;
	String sheet10_C15;
	String sheet10_P15;
	String sheet10_Q15;
	String sheet10_R15;
	String sheet10_S15;
	String sheet10_D16;
	String sheet10_A18;
	String sheet10_Q18;
	String sheet10_R18;
	String sheet10_S18;
	String sheet10_A19;
	String sheet10_B19;
	String sheet10_C19;
	String sheet10_P19;
	String sheet10_Q19;
	String sheet10_R19;
	String sheet10_S19;
	String sheet10_D20;
	String sheet10_A22;
	String sheet10_C22;
	String sheet10_P22;
	String sheet10_Q22;
	String sheet10_R22;
	String sheet10_S22;
	String sheet10_D23;
	String sheet10_A25;
	String sheet10_C25;
	String sheet10_P25;
	String sheet10_Q25;
	String sheet10_R25;
	String sheet10_S25;
	String sheet10_A28;
	String sheet10_C28;
	String sheet10_P28;
	String sheet10_Q28;
	String sheet10_R28;
	String sheet10_S28;
	String sheet10_A31;
	String sheet10_Q31;
	String sheet10_R31;
	String sheet10_S31;
	String sheet10_A32;
	String sheet10_B32;
	String sheet10_C32;
	String sheet10_P32;
	String sheet10_Q32;
	String sheet10_R32;
	String sheet10_S32;
	String sheet10_D33;
	String sheet10_D34;
	String sheet10_A35;
	String sheet10_C35;
	String sheet10_P35;
	String sheet10_Q35;
	String sheet10_R35;
	String sheet10_S35;
	String sheet10_D36;
	String sheet10_A38;
	String sheet10_C38;
	String sheet10_P38;
	String sheet10_Q38;
	String sheet10_R38;
	String sheet10_S38;
	String sheet10_A41;
	String sheet10_Q41;
	String sheet10_R41;
	String sheet10_S41;
	String sheet10_A42;
	String sheet10_B42;
	String sheet10_C42;
	String sheet10_P42;
	String sheet10_Q42;
	String sheet10_R42;
	String sheet10_S42;
	String sheet10_D43;
	String sheet10_A45;
	String sheet10_C45;
	String sheet10_P45;
	String sheet10_Q45;
	String sheet10_R45;
	String sheet10_S45;
	String sheet10_A48;
	String sheet10_C48;
	String sheet10_P48;
	String sheet10_Q48;
	String sheet10_R48;
	String sheet10_S48;
	String sheet10_A51;
	String sheet10_Q51;
	String sheet10_R51;
	String sheet10_S51;
	String sheet10_A52;
	String sheet10_B52;
	String sheet10_C52;
	String sheet10_P52;
	String sheet10_Q52;
	String sheet10_R52;
	String sheet10_S52;
	String sheet10_D53;
	String sheet10_A55;
	String sheet10_C55;
	String sheet10_P55;
	String sheet10_Q55;
	String sheet10_R55;
	String sheet10_S55;
	String sheet10_A58;
	String sheet10_C58;
	String sheet10_P58;
	String sheet10_Q58;
	String sheet10_R58;
	String sheet10_S58;
	String sheet10_D59;
	String sheet10_A61;
	String sheet10_C61;
	String sheet10_P61;
	String sheet10_Q61;
	String sheet10_R61;
	String sheet10_S61;
	String sheet10_D62;
	String sheet10_A64;
	String sheet10_C64;
	String sheet10_P64;
	String sheet10_Q64;
	String sheet10_R64;
	String sheet10_S64;
	String sheet10_D65;
	String sheet10_A67;
	String sheet10_C67;
	String sheet10_P67;
	String sheet10_Q67;
	String sheet10_R67;
	String sheet10_S67;
	String sheet10_D68;
	String sheet10_A70;
	String sheet10_C70;
	String sheet10_P70;
	String sheet10_Q70;
	String sheet10_R70;
	String sheet10_S70;
	String sheet10_A73;
	String sheet10_Q73;
	String sheet10_R73;
	String sheet10_S73;
	String sheet10_A74;
	String sheet10_B74;
	String sheet10_C74;
	String sheet10_P74;
	String sheet10_Q74;
	String sheet10_R74;
	String sheet10_S74;
	String sheet10_D75;
	String sheet10_A77;
	String sheet10_C77;
	String sheet10_P77;
	String sheet10_Q77;
	String sheet10_R77;
	String sheet10_S77;
	String sheet10_A80;
	String sheet10_C80;
	String sheet10_P80;
	String sheet10_Q80;
	String sheet10_R80;
	String sheet10_S80;
	String sheet10_D81;
	String sheet10_A83;
	String sheet10_Q83;
	String sheet10_R83;
	String sheet10_S83;
	String sheet10_A84;
	String sheet10_Q84;
	String sheet10_R84;
	String sheet10_S84;
	String sheet10_A86;
	String sheet10_A88;

	//ReportHandler 생성자 함수
	ReportHandler(PageContext pageContext,HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.pageContext=pageContext;
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			//변수 초기화
			this.out = out;
			nMaxPage = 0;   //nMaxPage 초기화

			manager = new AIScriptManager(request, response, pageContext, out, logger, null);

			ServletContext context = pageContext.getServletContext();
			String temp = null;
			if(!context.getContextPath().equals("/"))
			temp = request.getRequestURI().replace(context.getContextPath(), "");
			else
			temp = request.getRequestURI();

			String path = temp.replace(".jsp", ".style");

			//파라미터 설정 함수 호출
			setParam();
			if(manager.open(reportMode, context.getRealPath(path)))
			{
							
				//스크립트 헤더 함수 호출
				getScriptHeader("A4", "2100x2970", "9", "VERTICAL", "28 28 28 28");

				//고정 데이터 초기화 함수 호출
				initConstVarient();

				//Connection 및 Statement 객체 생성 함수 호출
				createConnAndStateObject();

				//쿼리문 초기화 함수 호출
				initSQLConst();

				//쉬트 함수 호출
				//SHEET=Sheet1   FRAME=0 함수 호출
				executeSheet10();

				//---------------스크립트 종료---------------
				manager.scriptWrite("/AIReport", "", "", false);
				manager.close();
			}
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("\r");
			StackTraceElement[] trace = e.getStackTrace();
			for(int i = 0; i < trace.length; i++) {
				out.println(trace[i]);
			}
			out.print("\r");
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		getSheetPaperInfo("A4", "2100x2970", "9", "VERTICAL", "28 28 28 28");
		initSheetVariant(46, 41, 551, 804, true);

		//시작 페이지 번호 출력
		pageWrite(nPageNum);

		//밴드 함수 호출
		getScriptFromsample(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----sample VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : sample
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromsample(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=743;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptsample();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----스크립트 출력 함수-----
	//----sample 스크립트 문 출력 함수----
	private void writeScriptsample( ) throws Exception{
		//스크립트문 생성
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos, 505, 29, sheet10_A1, "sheet10_A1", "cell_style_0");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+38, 188, 13, sheet10_R3, "sheet10_R3", "cell_style_1");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+60, 50, 30, sheet10_A5, "sheet10_A5", "cell_style_2");
		objectWrite(CELL_OBJECT, nXCurPos+50, nYCurPos+60, 50, 30, sheet10_B5, "sheet10_B5", "cell_style_2");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+60, 43, 30, sheet10_C5, "sheet10_C5", "cell_style_2");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+60, 109, 30, sheet10_D5, "sheet10_D5", "cell_style_2");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+60, 65, 30, sheet10_Q5, "sheet10_Q5", "cell_style_2");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+60, 94, 30, sheet10_R5, "sheet10_R5", "cell_style_2");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+60, 94, 30, sheet10_S5, "sheet10_S5", "cell_style_2");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+90, 50, 18, sheet10_A6, "sheet10_A6", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+50, nYCurPos+90, 50, 72, sheet10_B6, "sheet10_B6", "cell_style_4");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+90, 43, 18, sheet10_C6, "sheet10_C6", "cell_style_5");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+90, 84, 4, "", "sheet10_D6", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+90, 25, 18, sheet10_P6, "sheet10_P6", "cell_style_7");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+90, 65, 18, sheet10_Q6, "sheet10_Q6", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+90, 94, 18, sheet10_R6, "sheet10_R6", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+90, 94, 18, sheet10_S6, "sheet10_S6", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+94, 84, 10, sheet10_D7, "sheet10_D7", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+104, 84, 4, "", "sheet10_D8", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+108, 50, 18, sheet10_A9, "sheet10_A9", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+108, 43, 18, sheet10_C9, "sheet10_C9", "cell_style_5");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+108, 84, 4, "", "sheet10_D9", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+108, 25, 18, sheet10_P9, "sheet10_P9", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+108, 65, 18, sheet10_Q9, "sheet10_Q9", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+108, 94, 18, sheet10_R9, "sheet10_R9", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+108, 94, 18, sheet10_S9, "sheet10_S9", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+112, 28, 10, sheet10_D10, "sheet10_D10", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+122, 84, 4, "", "sheet10_D11", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+126, 50, 18, sheet10_A12, "sheet10_A12", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+126, 43, 18, sheet10_C12, "sheet10_C12", "cell_style_5");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+126, 84, 4, "", "sheet10_D12", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+126, 25, 18, sheet10_P12, "sheet10_P12", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+126, 65, 18, sheet10_Q12, "sheet10_Q12", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+126, 94, 18, sheet10_R12, "sheet10_R12", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+126, 94, 18, sheet10_S12, "sheet10_S12", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+130, 28, 10, sheet10_D13, "sheet10_D13", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+171, nYCurPos+130, 7, 10, "", "sheet10_H13", "cell_style_12");
		objectWrite(CELL_OBJECT, nXCurPos+178, nYCurPos+130, 7, 10, "", "sheet10_I13", "cell_style_12");
		objectWrite(CELL_OBJECT, nXCurPos+185, nYCurPos+130, 7, 10, "", "sheet10_J13", "cell_style_13");
		objectWrite(CELL_OBJECT, nXCurPos+192, nYCurPos+130, 7, 10, "", "sheet10_K13", "cell_style_12");
		objectWrite(CELL_OBJECT, nXCurPos+199, nYCurPos+130, 7, 10, "", "sheet10_L13", "cell_style_13");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+140, 84, 4, "", "sheet10_D14", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+144, 50, 18, sheet10_A15, "sheet10_A15", "cell_style_14");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+144, 43, 18, sheet10_C15, "sheet10_C15", "cell_style_4");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+144, 84, 4, "", "sheet10_D15", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+144, 25, 18, sheet10_P15, "sheet10_P15", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+144, 65, 18, sheet10_Q15, "sheet10_Q15", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+144, 94, 18, sheet10_R15, "sheet10_R15", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+144, 94, 18, sheet10_S15, "sheet10_S15", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+148, 84, 10, sheet10_D16, "sheet10_D16", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+162, 252, 25, sheet10_A18, "sheet10_A18", "cell_style_15");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+162, 65, 25, sheet10_Q18, "sheet10_Q18", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+162, 94, 25, sheet10_R18, "sheet10_R18", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+162, 94, 25, sheet10_S18, "sheet10_S18", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+187, 50, 18, sheet10_A19, "sheet10_A19", "cell_style_17");
		objectWrite(CELL_OBJECT, nXCurPos+50, nYCurPos+187, 50, 72, sheet10_B19, "sheet10_B19", "cell_style_18");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+187, 43, 18, sheet10_C19, "sheet10_C19", "cell_style_19");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+187, 25, 18, sheet10_P19, "sheet10_P19", "cell_style_7");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+187, 65, 18, sheet10_Q19, "sheet10_Q19", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+187, 94, 18, sheet10_R19, "sheet10_R19", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+187, 94, 18, sheet10_S19, "sheet10_S19", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+191, 28, 10, sheet10_D20, "sheet10_D20", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+201, 84, 4, "", "sheet10_D21", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+205, 50, 18, sheet10_A22, "sheet10_A22", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+205, 43, 18, sheet10_C22, "sheet10_C22", "cell_style_5");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+205, 84, 4, "", "sheet10_D22", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+205, 25, 18, sheet10_P22, "sheet10_P22", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+205, 65, 18, sheet10_Q22, "sheet10_Q22", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+205, 94, 18, sheet10_R22, "sheet10_R22", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+205, 94, 18, sheet10_S22, "sheet10_S22", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+209, 56, 10, sheet10_D23, "sheet10_D23", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+219, 84, 4, "", "sheet10_D24", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+223, 50, 18, sheet10_A25, "sheet10_A25", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+223, 43, 18, sheet10_C25, "sheet10_C25", "cell_style_5");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+223, 84, 4, "", "sheet10_D25", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+223, 25, 18, sheet10_P25, "sheet10_P25", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+223, 65, 18, sheet10_Q25, "sheet10_Q25", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+223, 94, 18, sheet10_R25, "sheet10_R25", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+223, 94, 18, sheet10_S25, "sheet10_S25", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+227, 7, 10, "", "sheet10_D26", "cell_style_20");
		objectWrite(CELL_OBJECT, nXCurPos+150, nYCurPos+227, 7, 10, "", "sheet10_E26", "cell_style_21");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+237, 84, 4, "", "sheet10_D27", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+241, 50, 18, sheet10_A28, "sheet10_A28", "cell_style_14");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+241, 43, 18, sheet10_C28, "sheet10_C28", "cell_style_4");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+241, 84, 4, "", "sheet10_D28", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+241, 25, 18, sheet10_P28, "sheet10_P28", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+241, 65, 18, sheet10_Q28, "sheet10_Q28", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+241, 94, 18, sheet10_R28, "sheet10_R28", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+241, 94, 18, sheet10_S28, "sheet10_S28", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+245, 7, 10, "", "sheet10_D29", "cell_style_20");
		objectWrite(CELL_OBJECT, nXCurPos+150, nYCurPos+245, 7, 10, "", "sheet10_E29", "cell_style_21");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+259, 252, 25, sheet10_A31, "sheet10_A31", "cell_style_15");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+259, 65, 25, sheet10_Q31, "sheet10_Q31", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+259, 94, 25, sheet10_R31, "sheet10_R31", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+259, 94, 25, sheet10_S31, "sheet10_S31", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+284, 50, 18, sheet10_A32, "sheet10_A32", "cell_style_17");
		objectWrite(CELL_OBJECT, nXCurPos+50, nYCurPos+284, 50, 54, sheet10_B32, "sheet10_B32", "cell_style_18");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+284, 43, 18, sheet10_C32, "sheet10_C32", "cell_style_19");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+284, 25, 18, sheet10_P32, "sheet10_P32", "cell_style_7");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+284, 65, 18, sheet10_Q32, "sheet10_Q32", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+284, 94, 18, sheet10_R32, "sheet10_R32", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+284, 94, 18, sheet10_S32, "sheet10_S32", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+288, 56, 10, sheet10_D33, "sheet10_D33", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+298, 84, 4, sheet10_D34, "sheet10_D34", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+302, 50, 18, sheet10_A35, "sheet10_A35", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+302, 43, 18, sheet10_C35, "sheet10_C35", "cell_style_5");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+302, 84, 4, "", "sheet10_D35", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+302, 25, 18, sheet10_P35, "sheet10_P35", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+302, 65, 18, sheet10_Q35, "sheet10_Q35", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+302, 94, 18, sheet10_R35, "sheet10_R35", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+302, 94, 18, sheet10_S35, "sheet10_S35", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+306, 63, 10, sheet10_D36, "sheet10_D36", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+316, 84, 4, "", "sheet10_D37", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+320, 50, 18, sheet10_A38, "sheet10_A38", "cell_style_14");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+320, 43, 18, sheet10_C38, "sheet10_C38", "cell_style_4");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+320, 84, 4, "", "sheet10_D38", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+320, 25, 18, sheet10_P38, "sheet10_P38", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+320, 65, 18, sheet10_Q38, "sheet10_Q38", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+320, 94, 18, sheet10_R38, "sheet10_R38", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+320, 94, 18, sheet10_S38, "sheet10_S38", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+324, 70, 10, "", "sheet10_D39", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+338, 252, 25, sheet10_A41, "sheet10_A41", "cell_style_15");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+338, 65, 25, sheet10_Q41, "sheet10_Q41", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+338, 94, 25, sheet10_R41, "sheet10_R41", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+338, 94, 25, sheet10_S41, "sheet10_S41", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+363, 50, 18, sheet10_A42, "sheet10_A42", "cell_style_17");
		objectWrite(CELL_OBJECT, nXCurPos+50, nYCurPos+363, 50, 54, sheet10_B42, "sheet10_B42", "cell_style_18");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+363, 43, 18, sheet10_C42, "sheet10_C42", "cell_style_19");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+363, 25, 18, sheet10_P42, "sheet10_P42", "cell_style_7");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+363, 65, 18, sheet10_Q42, "sheet10_Q42", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+363, 94, 18, sheet10_R42, "sheet10_R42", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+363, 94, 18, sheet10_S42, "sheet10_S42", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+367, 49, 10, sheet10_D43, "sheet10_D43", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+377, 84, 4, "", "sheet10_D44", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+381, 50, 18, sheet10_A45, "sheet10_A45", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+381, 43, 18, sheet10_C45, "sheet10_C45", "cell_style_5");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+381, 84, 4, "", "sheet10_D45", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+381, 25, 18, sheet10_P45, "sheet10_P45", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+381, 65, 18, sheet10_Q45, "sheet10_Q45", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+381, 94, 18, sheet10_R45, "sheet10_R45", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+381, 94, 18, sheet10_S45, "sheet10_S45", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+385, 21, 10, "", "sheet10_D46", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+395, 84, 4, "", "sheet10_D47", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+399, 50, 18, sheet10_A48, "sheet10_A48", "cell_style_14");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+399, 43, 18, sheet10_C48, "sheet10_C48", "cell_style_4");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+399, 84, 4, "", "sheet10_D48", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+399, 25, 18, sheet10_P48, "sheet10_P48", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+399, 65, 18, sheet10_Q48, "sheet10_Q48", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+399, 94, 18, sheet10_R48, "sheet10_R48", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+399, 94, 18, sheet10_S48, "sheet10_S48", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+403, 7, 10, "", "sheet10_D49", "cell_style_22");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+417, 252, 25, sheet10_A51, "sheet10_A51", "cell_style_15");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+417, 65, 25, sheet10_Q51, "sheet10_Q51", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+417, 94, 25, sheet10_R51, "sheet10_R51", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+417, 94, 25, sheet10_S51, "sheet10_S51", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+442, 50, 18, sheet10_A52, "sheet10_A52", "cell_style_17");
		objectWrite(CELL_OBJECT, nXCurPos+50, nYCurPos+442, 50, 126, sheet10_B52, "sheet10_B52", "cell_style_18");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+442, 43, 18, sheet10_C52, "sheet10_C52", "cell_style_19");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+442, 25, 18, sheet10_P52, "sheet10_P52", "cell_style_7");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+442, 65, 18, sheet10_Q52, "sheet10_Q52", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+442, 94, 18, sheet10_R52, "sheet10_R52", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+442, 94, 18, sheet10_S52, "sheet10_S52", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+446, 42, 10, sheet10_D53, "sheet10_D53", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+456, 84, 4, "", "sheet10_D54", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+460, 50, 18, sheet10_A55, "sheet10_A55", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+460, 43, 18, sheet10_C55, "sheet10_C55", "cell_style_5");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+460, 84, 4, "", "sheet10_D55", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+460, 25, 18, sheet10_P55, "sheet10_P55", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+460, 65, 18, sheet10_Q55, "sheet10_Q55", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+460, 94, 18, sheet10_R55, "sheet10_R55", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+460, 94, 18, sheet10_S55, "sheet10_S55", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+464, 7, 10, "", "sheet10_D56", "cell_style_20");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+474, 84, 4, "", "sheet10_D57", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+478, 50, 18, sheet10_A58, "sheet10_A58", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+478, 43, 18, sheet10_C58, "sheet10_C58", "cell_style_5");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+478, 84, 4, "", "sheet10_D58", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+478, 25, 18, sheet10_P58, "sheet10_P58", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+478, 65, 18, sheet10_Q58, "sheet10_Q58", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+478, 94, 18, sheet10_R58, "sheet10_R58", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+478, 94, 18, sheet10_S58, "sheet10_S58", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+482, 56, 10, sheet10_D59, "sheet10_D59", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+492, 84, 4, "", "sheet10_D60", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+496, 50, 18, sheet10_A61, "sheet10_A61", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+496, 43, 18, sheet10_C61, "sheet10_C61", "cell_style_5");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+496, 84, 4, "", "sheet10_D61", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+496, 25, 18, sheet10_P61, "sheet10_P61", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+496, 65, 18, sheet10_Q61, "sheet10_Q61", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+496, 94, 18, sheet10_R61, "sheet10_R61", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+496, 94, 18, sheet10_S61, "sheet10_S61", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+500, 63, 10, sheet10_D62, "sheet10_D62", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+510, 84, 4, "", "sheet10_D63", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+514, 50, 18, sheet10_A64, "sheet10_A64", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+514, 43, 18, sheet10_C64, "sheet10_C64", "cell_style_5");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+514, 84, 4, "", "sheet10_D64", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+514, 25, 18, sheet10_P64, "sheet10_P64", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+514, 65, 18, sheet10_Q64, "sheet10_Q64", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+514, 94, 18, sheet10_R64, "sheet10_R64", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+514, 94, 18, sheet10_S64, "sheet10_S64", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+518, 77, 10, sheet10_D65, "sheet10_D65", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+528, 84, 4, "", "sheet10_D66", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+532, 50, 18, sheet10_A67, "sheet10_A67", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+532, 43, 18, sheet10_C67, "sheet10_C67", "cell_style_5");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+532, 84, 4, "", "sheet10_D67", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+532, 25, 18, sheet10_P67, "sheet10_P67", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+532, 65, 18, sheet10_Q67, "sheet10_Q67", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+532, 94, 18, sheet10_R67, "sheet10_R67", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+532, 94, 18, sheet10_S67, "sheet10_S67", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+536, 56, 10, sheet10_D68, "sheet10_D68", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+546, 84, 4, "", "sheet10_D69", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+550, 50, 18, sheet10_A70, "sheet10_A70", "cell_style_14");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+550, 43, 18, sheet10_C70, "sheet10_C70", "cell_style_4");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+550, 84, 4, "", "sheet10_D70", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+550, 25, 18, sheet10_P70, "sheet10_P70", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+550, 65, 18, sheet10_Q70, "sheet10_Q70", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+550, 94, 18, sheet10_R70, "sheet10_R70", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+550, 94, 18, sheet10_S70, "sheet10_S70", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+554, 21, 10, "", "sheet10_D71", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+568, 252, 25, sheet10_A73, "sheet10_A73", "cell_style_15");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+568, 65, 25, sheet10_Q73, "sheet10_Q73", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+568, 94, 25, sheet10_R73, "sheet10_R73", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+568, 94, 25, sheet10_S73, "sheet10_S73", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+593, 50, 18, sheet10_A74, "sheet10_A74", "cell_style_17");
		objectWrite(CELL_OBJECT, nXCurPos+50, nYCurPos+593, 50, 54, sheet10_B74, "sheet10_B74", "cell_style_18");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+593, 43, 18, sheet10_C74, "sheet10_C74", "cell_style_17");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+593, 25, 18, sheet10_P74, "sheet10_P74", "cell_style_7");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+593, 65, 18, sheet10_Q74, "sheet10_Q74", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+593, 94, 18, sheet10_R74, "sheet10_R74", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+593, 94, 18, sheet10_S74, "sheet10_S74", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+597, 42, 10, sheet10_D75, "sheet10_D75", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+607, 84, 4, "", "sheet10_D76", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+611, 50, 18, sheet10_A77, "sheet10_A77", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+611, 43, 18, sheet10_C77, "sheet10_C77", "cell_style_3");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+611, 84, 4, "", "sheet10_D77", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+611, 25, 18, sheet10_P77, "sheet10_P77", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+611, 65, 18, sheet10_Q77, "sheet10_Q77", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+611, 94, 18, sheet10_R77, "sheet10_R77", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+611, 94, 18, sheet10_S77, "sheet10_S77", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+615, 14, 10, "", "sheet10_D78", "cell_style_23");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+625, 84, 4, "", "sheet10_D79", "cell_style_10");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+629, 50, 18, sheet10_A80, "sheet10_A80", "cell_style_14");
		objectWrite(CELL_OBJECT, nXCurPos+100, nYCurPos+629, 43, 18, sheet10_C80, "sheet10_C80", "cell_style_14");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+629, 84, 4, "", "sheet10_D80", "cell_style_6");
		objectWrite(CELL_OBJECT, nXCurPos+227, nYCurPos+629, 25, 18, sheet10_P80, "sheet10_P80", "cell_style_11");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+629, 65, 18, sheet10_Q80, "sheet10_Q80", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+629, 94, 18, sheet10_R80, "sheet10_R80", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+629, 94, 18, sheet10_S80, "sheet10_S80", "cell_style_8");
		objectWrite(CELL_OBJECT, nXCurPos+143, nYCurPos+633, 28, 10, sheet10_D81, "sheet10_D81", "cell_style_9");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+647, 252, 25, sheet10_A83, "sheet10_A83", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+647, 65, 25, sheet10_Q83, "sheet10_Q83", "cell_style_24");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+647, 94, 25, sheet10_R83, "sheet10_R83", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+647, 94, 25, sheet10_S83, "sheet10_S83", "cell_style_16");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+672, 252, 24, sheet10_A84, "sheet10_A84", "cell_style_25");
		objectWrite(CELL_OBJECT, nXCurPos+252, nYCurPos+672, 65, 24, sheet10_Q84, "sheet10_Q84", "cell_style_26");
		objectWrite(CELL_OBJECT, nXCurPos+317, nYCurPos+672, 94, 24, sheet10_R84, "sheet10_R84", "cell_style_25");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+672, 94, 24, sheet10_S84, "sheet10_S84", "cell_style_25");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+705, 411, 13, sheet10_A86, "sheet10_A86", "cell_style_27");
		objectWrite(CELL_OBJECT, nXCurPos+411, nYCurPos+705, 94, 13, "", "sheet10_S86", "cell_style_28");
		objectWrite(CELL_OBJECT, nXCurPos, nYCurPos+731, 411, 12, sheet10_A88, "sheet10_A88", "cell_style_29");
		objectWrite(DRAW_OBJECT, nXCurPos+113, nYCurPos+26, 278, 0, "", "AI_HLINE_OBJ1", "draw_style_0");
	}

	private void getBgImageScriptEx(int nIndex) throws Exception{
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
	}

	//-----ResultSet, Statement, Connection, CallableStatement Close 함수-----
	private void cleanup(Object rs, Statement st, CallableStatement cs, Connection conn){
		if(rs != null){
			try{
				if(rs instanceof ResultSet){
					((ResultSet)rs).close();
				}else if(rs instanceof com.activeintra.util.uds.AIDataSource){
					((com.activeintra.util.uds.AIDataSource)rs).close();
				}else if(rs instanceof com.activeintra.util.uds.XMLSetHandler){
					((com.activeintra.util.uds.XMLSetHandler)rs).close();
				}else if(rs instanceof com.activeintra.util.uds.CSVSetHandler){
					((com.activeintra.util.uds.CSVSetHandler)rs).close();
				}
			}
			catch(Exception e){
				//e.printStackTrace();
			}
		}

		if(st != null){
			try{
				st.close();
			}
			catch(Exception e){
				//e.printStackTrace();
			}
		}

		if(cs != null){
			try{
				cs.close();
			}
			catch(Exception e){
				//e.printStackTrace();
			}
		}

		if(conn != null){
			try{
				conn.close();
			}
			catch(Exception e){
				//e.printStackTrace();
			}
		}
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarientEx(){
		sheet10_A1="AIReport Sample Test Page";
		sheet10_R3="" + toDate() + "";
		sheet10_A5="코드";
		sheet10_B5="국가명";
		sheet10_C5="등급";
		sheet10_D5="판매수량";
		sheet10_Q5="제품가격";
		sheet10_R5="총판매가격";
		sheet10_S5="순이익";
		sheet10_A6="KR-1";
		sheet10_B6="한국";
		sheet10_C6="A";
		sheet10_P6="8,000";
		sheet10_Q6="￦3,000";
		sheet10_R6="￦60,000,000";
		sheet10_S6="￦9,200,000";
		sheet10_D7="　";
		sheet10_A9="KR-2";
		sheet10_C9="A";
		sheet10_P9="2,000";
		sheet10_Q9="￦4,000";
		sheet10_R9="￦8,000,000";
		sheet10_S9="￦18,000,000";
		sheet10_D10="　";
		sheet10_A12="KR-3";
		sheet10_C12="A";
		sheet10_P12="4,000";
		sheet10_Q12="￦1,000";
		sheet10_R12="￦12,500,000";
		sheet10_S12="￦48,000,000";
		sheet10_D13="　";
		sheet10_A15="KR-4";
		sheet10_C15="A";
		sheet10_P15="8,000";
		sheet10_Q15="￦6,000";
		sheet10_R15="￦80,000,000";
		sheet10_S15="￦2,165,000";
		sheet10_D16="　";
		sheet10_A18="소          계";
		sheet10_Q18="￦14,000";
		sheet10_R18="￦160,500,000";
		sheet10_S18="￦77,365,000";
		sheet10_A19="PA-1";
		sheet10_B19="중국";
		sheet10_C19="A";
		sheet10_P19="2,000";
		sheet10_Q19="￦1,000";
		sheet10_R19="￦20,000,000";
		sheet10_S19="￦18,000,000";
		sheet10_D20="　";
		sheet10_A22="PA-2";
		sheet10_C22="A";
		sheet10_P22="3,000";
		sheet10_Q22="￦2,000";
		sheet10_R22="￦60,000,000";
		sheet10_S22="￦50,000,000";
		sheet10_D23="　";
		sheet10_A25="PA-3";
		sheet10_C25="A";
		sheet10_P25="1,500";
		sheet10_Q25="￦1,500";
		sheet10_R25="￦22,500,000";
		sheet10_S25="￦20,000,000";
		sheet10_A28="PA-4";
		sheet10_C28="A";
		sheet10_P28="1,500";
		sheet10_Q28="￦1,800";
		sheet10_R28="￦27,000,000";
		sheet10_S28="￦23,000,000";
		sheet10_A31="소          계";
		sheet10_Q31="￦6,300";
		sheet10_R31="￦129,500,000";
		sheet10_S31="￦111,000,000";
		sheet10_A32="CP-1";
		sheet10_B32="미국";
		sheet10_C32="B";
		sheet10_P32="3,000";
		sheet10_Q32="￦4,000";
		sheet10_R32="￦12,000,000";
		sheet10_S32="￦15,000,000";
		sheet10_D33="　";
		sheet10_D34="　";
		sheet10_A35="CP-2";
		sheet10_C35="B";
		sheet10_P35="3,500";
		sheet10_Q35="￦4,500";
		sheet10_R35="￦15,750,000";
		sheet10_S35="￦17,000,000";
		sheet10_D36="　";
		sheet10_A38="CP-3";
		sheet10_C38="B";
		sheet10_P38="3,700";
		sheet10_Q38="￦4,700";
		sheet10_R38="￦17,390,000";
		sheet10_S38="￦2,000,000";
		sheet10_A41="소          계";
		sheet10_Q41="￦13,200";
		sheet10_R41="￦45,140,000";
		sheet10_S41="￦34,000,000";
		sheet10_A42="HQ-1";
		sheet10_B42="영국";
		sheet10_C42="B";
		sheet10_P42="2,900";
		sheet10_Q42="￦2,400";
		sheet10_R42="￦6,960,000";
		sheet10_S42="￦1,359,000";
		sheet10_D43="　";
		sheet10_A45="HQ-2";
		sheet10_C45="B";
		sheet10_P45="2,350";
		sheet10_Q45="￦3,500";
		sheet10_R45="￦8,225,000";
		sheet10_S45="￦2,980,000";
		sheet10_A48="HQ-3";
		sheet10_C48="B";
		sheet10_P48="1,900";
		sheet10_Q48="￦3,700";
		sheet10_R48="￦70,300,000";
		sheet10_S48="￦89,000,000";
		sheet10_A51="소          계";
		sheet10_Q51="￦9,600";
		sheet10_R51="￦85,485,000";
		sheet10_S51="￦93,339,000";
		sheet10_A52="PO-1";
		sheet10_B52="독일";
		sheet10_C52="B";
		sheet10_P52="2,400";
		sheet10_Q52="￦2,900";
		sheet10_R52="￦6,960,000";
		sheet10_S52="￦5,905,000";
		sheet10_D53="　";
		sheet10_A55="PO-2";
		sheet10_C55="B";
		sheet10_P55="1,300";
		sheet10_Q55="￦1,700";
		sheet10_R55="￦2,210,000";
		sheet10_S55="￦2,210,000";
		sheet10_A58="PO-3";
		sheet10_C58="B";
		sheet10_P58="3,000";
		sheet10_Q58="￦2,000";
		sheet10_R58="￦60,000,000";
		sheet10_S58="￦5,490,000";
		sheet10_D59="　";
		sheet10_A61="PO-4";
		sheet10_C61="B";
		sheet10_P61="3,500";
		sheet10_Q61="￦2,200";
		sheet10_R61="￦10,000,000";
		sheet10_S61="￦9,200,000";
		sheet10_D62="　";
		sheet10_A64="PO-5";
		sheet10_C64="B";
		sheet10_P64="3,700";
		sheet10_Q64="￦3,000";
		sheet10_R64="￦11,100,000";
		sheet10_S64="￦12,000,000";
		sheet10_D65="　";
		sheet10_A67="PO-6";
		sheet10_C67="B";
		sheet10_P67="3,000";
		sheet10_Q67="￦2,600";
		sheet10_R67="￦7,800,000";
		sheet10_S67="￦8,300,000";
		sheet10_D68="　";
		sheet10_A70="PO-7";
		sheet10_C70="B";
		sheet10_P70="2,340";
		sheet10_Q70="￦2,000";
		sheet10_R70="￦5,000,000";
		sheet10_S70="￦42,150,000";
		sheet10_A73="소          계";
		sheet10_Q73="￦16,400";
		sheet10_R73="￦103,070,000";
		sheet10_S73="￦85,255,000";
		sheet10_A74="BR-1";
		sheet10_B74="브라질";
		sheet10_C74="C";
		sheet10_P74="2,450";
		sheet10_Q74="￦2,400";
		sheet10_R74="￦164,000";
		sheet10_S74="￦18,500,000";
		sheet10_D75="　";
		sheet10_A77="BR-2";
		sheet10_C77="C";
		sheet10_P77="1,500";
		sheet10_Q77="￦4,000";
		sheet10_R77="￦500,000";
		sheet10_S77="￦210,000";
		sheet10_A80="BR-3";
		sheet10_C80="C";
		sheet10_P80="2,000";
		sheet10_Q80="￦2,000";
		sheet10_R80="￦4,500,000";
		sheet10_S80="￦7,000,000";
		sheet10_D81="　";
		sheet10_A83="소          계";
		sheet10_Q83="￦8,400";
		sheet10_R83="￦5,164,000";
		sheet10_S83="￦25,710,000";
		sheet10_A84="총    합    계";
		sheet10_Q84="￦67,900";
		sheet10_R84="￦528,859,000";
		sheet10_S84="￦426,669,000";
		sheet10_A86="HTML VIEWER SAMPLE PAGE";
		sheet10_A88=" 페이지번호 : #PAGE / #TOTALPAGE";
	}

	//-----공통 함수 선언-----
	//파라미터 설정 함수
	private void setParam() {
		//SetParam_AutoCode
		reportMode=toKor(GetB(request.getParameter("reportMode")));
		if(reportMode.equals("")) {
			reportMode="HTML";
		}
		manager.setParam("pdfFilename:" + pdfFilename + "," + toKor(GetB(request.getParameter("reportParams"))));
	}

	//상수 데이터 초기화 래퍼 함수
	private void initConstVarient() {
		//InitConstVarient_AutoCode
		initConstVarientEx();
	}

	//배경 이미지 출력 래퍼 함수
	private void getBgImageScript(int nIndex) throws Exception{
		//GetBgImageScript_AutoCode
		getBgImageScriptEx(nIndex);
	}

	//페이지 스킵 함수
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		//PageSkip_AutoCode
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		pageWrite(nPageNum);

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		//IsPageSkip_AutoCode
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//문자의 폭을 조사하여 데이터의 출력 높이를 자동적으로 조정하는 함수
	private int getPrintHeight(String data, int[] charWidth, int fontSize, int printWidth, int printHeight, int nMaxHeight){
		//GetPrintHeight_AutoCode
		int ch;
		int len = 95;
		int []width = new int[1];
		width[0] = 0;
		int asciiWidth = 0;
		int linePitch = (int)(fontSize*1.4);
		int height = linePitch;
		int size = data.length();
		int ascIndex=0;
		printWidth = (printWidth-4)*100;

		for (int i = 0; i < size; i++) {
			ch = data.charAt(i);

			if(ch<32 && !(ch==10 || ch==20 || ch==13)){
				continue;
			}

			if((ch>64 && ch<91) || (ch>96 && ch<123)) {
				if(asciiWidth==0){
					ascIndex=i;
				}

				asciiWidth += charWidth[ch-32];
				if (i==size-1){
					height+=getWordWrapHeight(data, charWidth, ascIndex, i+1, linePitch, printWidth, width, asciiWidth);
				}
			} else if (ch==10 || ch==20 || ch==13) {
				if(asciiWidth>0){
					height+=getWordWrapHeight(data, charWidth, ascIndex, i, linePitch, printWidth, width, asciiWidth);
					asciiWidth = 0;
				}

				width[0] = 0;
				height += linePitch;

				if (ch==13) {
					if ((i != size-1) && (10 == (int)data.charAt(i+1))) {
						i++;
					}
				}
			} else {
				if(asciiWidth>0){
					height+=getWordWrapHeight(data, charWidth, ascIndex, i, linePitch, printWidth, width, asciiWidth);
					asciiWidth=0;
				}

				if(ch>=32 && ch<=127){
					width[0] += charWidth[ch-32];
					if (width[0] > printWidth) {
						if (ch==32)
						{
							width[0] = 0;
						}
						else
						{
							width[0] = charWidth[ch-32];
						}
						height += linePitch;
					}
				}else{
					width[0] += charWidth[len];
					if (width[0] > printWidth) {
						width[0] = charWidth[len];
						height += linePitch;
					}
				}
			}
		}

		if (height>printHeight) {
			height=height-printHeight;
		}else{
			height=0;
		}

		height = (int)MAX((long)height,(long)nMaxHeight);
		return height;
	}

	//영문 단어의 폭을 문자별로 조사하여 데이터의 출력 높이를 조정하는 함수
	private int getWordWrapHeight(String data, int[] charWidth, int nStartIndex, int nEndIndex, int linePitch, int printWidth, int []width, int asciiWidth){
		//GetWordWrapHeight_AutoCode
		int ch;
		int height=0;

		if(asciiWidth>printWidth){
			for(int i=nStartIndex; i<nEndIndex; i++){
				ch=data.charAt(i);
				width[0]+=charWidth[ch-32];
				if(width[0]>printWidth){
					width[0]=charWidth[ch-32];
					height+=linePitch;
				}
			}
		}else{
			width[0]+=asciiWidth;
			if(width[0]>printWidth){
				width[0]=asciiWidth;
				height+=linePitch;
			}
		}

		return height;
	}

	//문자의 폭을 조사하여 데이터의 출력 높이를 자동적으로 조정하고 페이지 초과시 초과하는 데이터 절삭하는 함수
	private int getPrintHeightEx(String data, String[] strSplitData, int[] charWidth, int fontSize, int printWidth, int nExtHeight, int nMaxHeight){
		//GetPrintHeightEx_AutoCode
		int ch;
		int i;
		int len = 95;
		int []width = new int[1];
		width[0] = 0;
		int asciiWidth = 0;
		int linePitch = (int)(fontSize*1.4);
		int height = linePitch;
		int size = data.length();
		int ascIndex=0;
		boolean bSplit=false;
		strSplitData[0]="";
		strSplitData[1]="";
		printWidth = (printWidth-4)*100;

		for (i = 0; i < size; i++) {
			ch = data.charAt(i);

			if(ch<32 && !(ch==10 || ch==20 || ch==13)){
				continue;
			}

			if ((ch>64 && ch<91) || (ch>96 && ch<123)) {
				if(asciiWidth==0){
					ascIndex=i;
				}

				asciiWidth += charWidth[ch-32];
				if (i==size-1){
					height+=getWordWrapHeight(data, charWidth, ascIndex, i+1, linePitch, printWidth, width, asciiWidth);
					if(height>nExtHeight){
						height=nExtHeight;
						bSplit=true;
						i=ascIndex;
						break;
					}
				}
			}else if (ch==10 || ch==20 || ch==13) {
				if(asciiWidth>0){
					height+=getWordWrapHeight(data, charWidth, ascIndex, i, linePitch, printWidth, width, asciiWidth);
					if(height>nExtHeight){
						height=nExtHeight;
						bSplit=true;
						i=ascIndex;
						break;
					}
					asciiWidth = 0;
				}

				width[0] = 0;
				height += linePitch;
				if (ch==13){
					if ((i != size-1) && (10 == (int)data.charAt(i+1))) {
						i++;
					}
				}

				if(height>nExtHeight){
					height=nExtHeight;
					if(i!=size-1){
						bSplit=true;
						i++;
					}
					break;
				}
			}else{
				if(asciiWidth>0){
					height+=getWordWrapHeight(data, charWidth, ascIndex, i, linePitch, printWidth, width, asciiWidth);
					if(height>nExtHeight){
						height=nExtHeight;
						bSplit=true;
						i=ascIndex;
						break;
					}
					asciiWidth=0;
				}

				if(ch>=32 && ch<=127){
					width[0] += charWidth[ch-32];
					if (width[0] > printWidth) {
						if (ch==32)
						{
							width[0] = 0;
						}
						else
						{
							width[0] = charWidth[ch-32];
						}
						height += linePitch;
					}
				}else{
					width[0] += charWidth[len];
					if (width[0] > printWidth) {
						width[0] = charWidth[len];
						height += linePitch;
					}
				}

				if(height>nExtHeight){
					height=nExtHeight;
					bSplit=true;
					break;
				}
			}
		}

		if(bSplit){
			strSplitData[0]=data.substring(0, i);
			strSplitData[1]=data.substring(i);
		}

		height = (int)MAX((long)height,(long)nMaxHeight);
		return height;
	}

	//스크립트 헤더 출력 함수
	private void getScriptHeader(String paper, String size, String value, String orient, String margin) throws Exception{
		//GetScriptHeader_AutoCode
		manager.scriptWrite("AIReport", "scriptVersion|docVersion|style|title", "32|12|sample.style|보고서 (2013/1/3 18:44:55)", false);
		manager.scriptWrite("PaperInfo", "name|size|value|orientation|margin", paper+"|"+size+"|"+value+"|"+orient+"|"+margin, true);
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient, String margin) throws Exception{
		//GetSheetPaperInfo_AutoCode
		manager.scriptWrite("PaperInfo", "name|size|value|orientation|margin", paper+"|"+size+"|"+value+"|"+orient+"|"+margin, true);
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		//InitSheetVariant_AutoCode
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		CELL_OBJECT=0;
		DRAW_OBJECT=1;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		//InitChildSheetVariant_AutoCode
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		//VoidBandNoneData_AutoCode
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		//Get0_AutoCode
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		//GetB_AutoCode
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		//SUM(double, double)_AutoCode
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		//SUM(double, long)_AutoCode
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		//SUM(long, long)_AutoCode
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		//SUM(long, double)_AutoCode
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		//COUNT_AutoCode
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		//MIN(long, long)_AutoCode
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		//MIN(long, double)_AutoCode
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		//MIN(double, double)_AutoCode
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		//MIN(double, long)_AutoCode
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private long MAX(long maxV, long maxTempV){
		//MAX(long, long)_AutoCode
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		//MAX(long, double)_AutoCode
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		//MAX(double, double)_AutoCode
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		//MAX(double, long)_AutoCode
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		//AVG(double, long)_AutoCode
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		//AVG(long, long)_AutoCode
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		//AIReplace_AutoCode
		int st = 0, ed = 0;
		final int size = strAll.length();
		ed = strAll.indexOf(strSrc);
		if (ed == -1) return strAll;

		StringBuffer buf = new StringBuffer(size);
		final int len =  strSrc.length();
		do {
			buf.append(strAll.substring(st, ed));
			buf.append(strDest);
			ed += len;
			st = ed;
		} while ((ed = strAll.indexOf(strSrc, ed)) != -1);
		if (st < size) {
			buf.append(strAll.substring(st));
		}
		return buf.toString();
	}

	private String toDate() {
		//ToDate_AutoCode
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		//ToKor_AutoCode
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "utf-8");
		}catch(Exception e){return en;}
	}

	private void objectWrite(int type, int left, int top, int width, int height, String data, String name, String style) throws Exception {
		//ObjectWrite_AutoCode
		manager.scriptWrite(type, left, top, width, height, data, name, style);
	}

	private void propertyWrite(int type, String name, String property, String style) throws Exception {
		//PropertyWrite_AutoCode
		manager.scriptWrite(type, name, property, style);
	}

	private void pageWrite(int pageNum) throws Exception {
		//PageWrite_AutoCode
		manager.scriptWrite("Page", "number", Integer.toString(pageNum), true);
	}
}
%>
